name: Module

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'RikkaApps/Sui'
          ref: '${{ github.ref }}'
          submodules: 'recursive'
          fetch-depth: 0
      - run: |
          git tag --list v13.5.1 | grep -q -e . || git tag --create-reflog --no-edit v13.5.1 f9b9d2510e74ffd3740eca86f3dbc8c12d51cc4c
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false
          packages: 'tools platform-tools cmake;3.10.2.4988404'
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-module-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps
      - name: Cache Ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-ccache-cache-
      - name: Install ccache
        run: |
          sudo apt-get install -y ccache
          ccache -o max_size=2G
          ccache -o hash_dir=false
      - name: Build with Gradle
        run: |
          mkdir -p ~/.gradle/wrapper
          mkdir -p ~/.gradle/caches
          [ $(du -s ~/.gradle/wrapper | awk '{ print $1 }') -gt 250000 ] && rm -rf ~/.gradle/wrapper/* || true
          find ~/.gradle/caches -exec touch -d "2 days ago" {} + || true
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          ./gradlew zipRiruDebug zipRiruRelease zipZygiskDebug zipZygiskRelease
      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          riruReleaseName=`ls out/sui-riru-*-release.zip | awk -F '(/|.zip)' '{print $2}'` && echo "riruReleaseName=$riruReleaseName" >> $GITHUB_OUTPUT
          riruDebugName=`ls out/sui-riru-*-debug.zip | awk -F '(/|.zip)' '{print $2}'` && echo "riruDebugName=$riruDebugName" >> $GITHUB_OUTPUT
          zygiskReleaseName=`ls out/sui-zygisk-*-release.zip | awk -F '(/|.zip)' '{print $2}'` && echo "zygiskReleaseName=$zygiskReleaseName" >> $GITHUB_OUTPUT
          zygiskDebugName=`ls out/sui-zygisk-*-debug.zip | awk -F '(/|.zip)' '{print $2}'` && echo "zygiskDebugName=$zygiskDebugName" >> $GITHUB_OUTPUT
          unzip out/sui-riru-*-release.zip -d sui-riru-release
          unzip out/sui-riru-*-debug.zip -d sui-riru-debug
          unzip out/sui-zygisk-*-release.zip -d sui-zygisk-release
          unzip out/sui-zygisk-*-debug.zip -d sui-zygisk-debug
      - name: Upload Riru release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruReleaseName }}
          path: './sui-riru-release/*'
      - name: Upload Riru debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruDebugName }}
          path: './sui-riru-debug/*'
      - name: Upload Zygisk release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskReleaseName }}
          path: './sui-zygisk-release/*'
      - name: Upload Zygisk debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskDebugName }}
          path: './sui-zygisk-debug/*'
      - name: Upload mappings
        uses: actions/upload-artifact@v4
        with:
          name: mappings
          path: |
            module/build/outputs/mapping/*elease
            ui/build/outputs/mapping/release

      - name: '[DEBUG] 安装依赖命令'
        if: '${{ ! cancelled() }}'
        shell: bash
        run: |
          sudo apt-get install -y jq
          sudo apt-get install -y tar
      - name: '[DEBUG] 打印环境信息'
        if: '${{ ! cancelled() }}'
        env:
          debug_context_github: '${{ toJson(github) }}'
          debug_context_env: '${{ toJson(env) }}'
          debug_context_vars: '${{ toJson(vars) }}'
          debug_context_job: '${{ toJson(job) }}'
          debug_context_steps: '${{ toJson(steps) }}'
          debug_context_runner: '${{ toJson(runner) }}'
          debug_context_secrets: '${{ toJson(secrets) }}'
          debug_context_strategy: '${{ toJson(strategy) }}'
          debug_context_matrix: '${{ toJson(matrix) }}'
          debug_context_needs: '${{ toJson(needs) }}'
          debug_context_inputs: '${{ toJson(inputs) }}'
        shell: bash
        run: |
          eval "uname -a; id; sudo id; set"
          (
            printf %s '{'
            printf '"%s":%s' github "${debug_context_github:-"{}"},"
            printf '"%s":%s' env "${debug_context_env:-"{}"},"
            printf '"%s":%s' vars "${debug_context_vars:-"{}"},"
            printf '"%s":%s' job "${debug_context_job:-"{}"},"
            printf '"%s":%s' steps "${debug_context_steps:-"{}"},"
            printf '"%s":%s' runner "${debug_context_runner:-"{}"},"
            printf '"%s":%s' secrets "${debug_context_secrets:-"{}"},"
            printf '"%s":%s' strategy "${debug_context_strategy:-"{}"},"
            printf '"%s":%s' matrix "${debug_context_matrix:-"{}"},"
            printf '"%s":%s' needs "${debug_context_needs:-"{}"},"
            printf '"%s":%s' inputs "${debug_context_inputs:-"{}"}"
            printf %s '}'
          ) | jq -M -S --indent 3
      - name: '[DEBUG] 打包构建目录'
        if: '${{ ! cancelled() }}'
        shell: bash
        run: |
          eval "set -x"
          name="build-caches-${GITHUB_REPOSITORY_OWNER_ID}-${GITHUB_REPOSITORY_ID}-${GITHUB_SHA}" && path="${RUNNER_TEMP}" && base="${path}/${name}"
          if sudo tar -v -h -c -f "${base}.tar" -- "${RUNNER_WORKSPACE}" 1>/dev/null || tar -v -t -f "${base}.tar" 1>/dev/null; then
            if sudo "$(command -v bash || command -v sh)" -c 'cat -- "${1}.tar" | gzip -c -9 1>"${1}.tgz"' - "${base}"; then
              path="${base}.tgz" && du -c -h -s -- "${path}"
            else
              exit "${?}"
            fi
          else
            exit "${?}"
          fi
          printf '%s=%s\n' artifact_buildCachesName "${name}" 1>>"${GITHUB_ENV}"
          printf '%s=%s\n' artifact_buildCachesPath "${path}" 1>>"${GITHUB_ENV}"
      - name: '[DEBUG] 上传打包附件'
        if: '${{ ! cancelled() }}'
        uses: 'actions/upload-artifact@v4'
        with:
          name: '${{ env.artifact_buildCachesName }}'
          path: '${{ env.artifact_buildCachesPath }}'
          compression-level: 0
          include-hidden-files: true
